package ua.javarush.task.jdk13.task41.task4121;

/* 
Техпідтримка
Клас CRM приймає проблему у вигляді рядка і передає її на підтримку, яка складається з декількох рівнів.

Рівні один за одним намагаються вирішити проблему, кожен своїм способом. Який саме із рівнів вирішить проблему,
визначається динамічно. Скористайся патерном Ланцюжок обов'язків та винеси кожен рівень в окремий клас:

1. Клас TechSupport буде твоїм базовим обробником:
- Зроби TechSupport абстрактним.
- Інтерфейс підтримки не повинен змінитися, отже залиш метод solve, але зроби його абстрактним.
- Додай до TechSupport приватне поле nextLevel для збереження посилання на наступний об'єкт ланцюжка.
- Додай до TechSupport сеттер для nextLevel, але нехай він окрім встановлення значення полю ще й повертає це значення.
- Додай базовий метод обробки protected void passAlongTheChain(String problem). Він повинен перенаправляти запит на наступний
рівень (поле nextLevel), попередньо перевіривши, що він не null.

2. У пакеті support створи класи конкретних обробників: CallCenter, HelpDesk, SysAdmin та ITDirector.
- Всі класи повинні успадковувати TechSupport та реалізовувати метод solve.
- Метод solve повинен містити фрагмент логіки зі старого методу solve класу TechSupport.
- В усіх класах окрім ITDirector метод solve повинен викликати метод passAlongTheChain, якщо поточний рівень підтримки
не зміг вирішити проблему.

3. У конструкторі класу CRM ініціалізуй поле techSupport новим об'єктом CallCenter. Також у конструкторі збери ланцюжок
конкретних обробників за допомогою методу setNextLevel.
Якщо все було зроблено правильно, програма має працювати так само, як і раніше.

Requirements:
1. Клас Solution не повинен змінюватися.
2. Клас TechSupport та його метод solve повинні бути абстрактними.
3. У класі TechSupport має бути поле nextLevel, а методи setNextLevel та passAlongTheChain реалізовані відповідно до умови.
4. У пакеті support повинні існувати класи CallCenter, HelpDesk, SysAdmin та ITDirector – спадкоємці TechSupport.
5. У класах конкретних обробників має бути реалізовано метод solve згідно з умовою.
6. Конструктор CRM має бути реалізовано згідно з умовою.
*/

public class Solution {

    public static void main(String[] args) {
        CRM crm = new CRM();
        crm.register("Зламалася мишка - не працює коліщатко.");
        crm.register("Глючить клавіатура.");
        crm.register("Потрібно вибрати місце для літнього корпоративу.");
        crm.register("Потрібна резервна копія ПК головного буху за позавчора.");
        crm.register("Нічого не працює.");
    }
}
