package ua.javarush.task.jdk13.task17.task1707;

/* 
МВФ
Singleton патерн - синхронізація в методі.
Клас IMF - це Міжнародний Валютний Фонд.
Всередині методу getFund створи синхронізований блок.
Всередині синхронізованого блоку ініціалізуй поле imf таким чином, щоб метод getFund завжди повертав один і той самий об'єкт.

Requirements:
1. Клас IMF повинен містити приватне статичне поле IMF imf.
2. Клас IMF має містити приватний конструктор.
3. Клас IMF має містити публічний статичний метод IMF getFund().
4. Метод getFund() повинен містити синхронізований блок.
5. Всередині синхронізованого блоку має бути проініціалізовано поле imf.
6. Метод getFund() завжди має повертати один і той самий об'єкт.
*/

public class Solution {
    public static void main(String[] args) {
        IMF fund = IMF.getFund();
        IMF anotherFund = IMF.getFund();
        System.out.println(fund == anotherFund);
    }
}

/*

в синхронізованому блоку ми перевіряємо, чи був вже створений екземпляр IMF. Якщо ні - ми його створюємо. Якщо так -
ми просто повертаємо вже існуючий екземпляр. Таким чином, гарантується, що буде створено тільки один об'єкт IMF.

*/