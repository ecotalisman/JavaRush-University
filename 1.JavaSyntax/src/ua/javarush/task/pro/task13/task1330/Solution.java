package ua.javarush.task.pro.task13.task1330;

/*
Реалізація Singleton, використовуючи Enum
MyMySingleton — це приклад реалізації патерну синглтон за допомогою перерахування.

Зроби так, щоб під час виклику методу main перед рядком "Екземпляр синглтона: INSTANCE" на екран вивівся рядок
"створення екземпляра...".

Зробити це потрібно, не вносячи змін до класу Solution.


Requirements:
1. Не можна змінювати клас Solution.
2. Під час запуску методу main на екран мають бути виведені два рядки згідно з умовою.
*/


public class Solution {
    public static void main(String[] args) {
        System.out.println("Екземпляр синглтона: " + MySingleton.INSTANCE);
    }
}

/*
MySingleton вже є синглтоном через властивості, які надає Java для enum'ів. Однак, коли ми використовуємо статичний блок
ініціалізації

public enum MySingleton {
    INSTANCE;

    static {
        System.out.println("створення екземпляра...");
    }
}

для виведення повідомлення "створення екземпляра...", але це повідомлення не виводиться, оскільки
статичний блок ініціалізації виконується тільки один раз, коли клас завантажується в пам'ять JVM.

Проблема в тому, що якщо ми намагаємося використовувати статичний блок ініціалізації в enum, який не працює так, як ми
очікуємо. Замість цього, ми можемо використовувати конструктор enum для виведення цього повідомлення.

public enum MySingleton {
    INSTANCE;

    MySingleton() {
        System.out.println("створення екземпляра...");
    }
}

Слід зауважити, що конструктор enum є приватним за замовчуванням, тому ми не маємо вказувати модифікатор доступу.
Коли ми звертаємось до MySingleton.INSTANCE вперше, конструктор викликається, і ми побачимо повідомлення
"створення екземпляра...".

*/